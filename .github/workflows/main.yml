# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Code review with sonarqube
      - name: Code review with sonarqube
        env:
          API_KEY: ${{ secrets.API_KEY }}
          SONARSCANNER_VERSION: "4.7.0.2747-linux"
        run: |
            wget "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONARSCANNER_VERSION.zip"
            unzip sonar-scanner-cli-$SONARSCANNER_VERSION.zip
            cd coit-frontend            
            $PATH:$HOME/sonar-scanner-cli-$SONARSCANNER_VERSION/bin/sonar-scanner \
            -Dsonar.projectKey=frontend \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://35.244.8.10:9000 \
            -Dsonar.login=$API_KEY

      # Look for Dependency Vulnaribility
      - name: Look for dependency vulnaribilities
        run: |
          cd coit-frontend
          npm audit
          
      # Runs a single command using the runners shell
      - name: Login to docker registry
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          docker login -u="${DOCKER_USERNAME}" -p="${DOCKER_PASSWORD}"

      # Runs a set of commands using the runners shell
      - name: Build the frontend
        run: |
          docker build coit-frontend -t coitlearning/coit-frontend:latest -f coit-frontend/Dockerfile-multistage 
          docker push coitlearning/coit-frontend:latest
